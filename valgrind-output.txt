==73341== Memcheck, a memory error detector
==73341== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==73341== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==73341== Command: ./a.out
==73341== Parent PID: 71960
==73341== 
==73341== 
==73341== Process terminating with default action of signal 1 (SIGHUP)
==73341==    at 0x4BF102C: read (read.c:26)
==73341==    by 0x4B9DB1F: _IO_file_underflow@@GLIBC_2.17 (fileops.c:521)
==73341==    by 0x4B9EB97: _IO_default_uflow (genops.c:362)
==73341==    by 0x4982717: __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::underflow() (in /usr/lib64/libstdc++.so.6.0.25)
==73341==    by 0x498FAC7: std::istream::sentry::sentry(std::istream&, bool) (in /usr/lib64/libstdc++.so.6.0.25)
==73341==    by 0x498FD2B: std::istream::operator>>(int&) (in /usr/lib64/libstdc++.so.6.0.25)
==73341==    by 0x403477: main (main.cpp:36)
==73341== 
==73341== HEAP SUMMARY:
==73341==     in use at exit: 89,095 bytes in 7 blocks
==73341==   total heap usage: 22 allocs, 15 frees, 91,773 bytes allocated
==73341== 
==73341== LEAK SUMMARY:
==73341==    definitely lost: 0 bytes in 0 blocks
==73341==    indirectly lost: 0 bytes in 0 blocks
==73341==      possibly lost: 0 bytes in 0 blocks
==73341==    still reachable: 89,095 bytes in 7 blocks
==73341==         suppressed: 0 bytes in 0 blocks
==73341== Rerun with --leak-check=full to see details of leaked memory
==73341== 
==73341== For lists of detected and suppressed errors, rerun with: -s
==73341== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
