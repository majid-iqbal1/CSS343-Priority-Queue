Tue Apr  2 07:30:21 UTC 2024
Linux LinuxMachine 6.4.16-linuxkit #1 SMP PREEMPT Thu Nov 16 10:49:20 UTC 2023 aarch64 aarch64 aarch64 GNU/Linux
uid=1000(cssuwbstudent) gid=1000(cssuwbstudent) groups=1000(cssuwbstudent),10(wheel)
=====================================================
1. If the section below is empty, the program compiles 
   without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. If the section below is empty or has the expected output 
    the program puns and produces correct output
=====================================================
How many vaccines are available? Majid, Isabella, Lily, Scarlett, Mila, Aurora, Anna, Mary, Mia, Amelia, Madison, John, Mark, Evelyn, Camila, Noah, Grace, Emily, Lucy, Lillian, Riley, Abigail, Evan, Avery, Penelope, Zoe, Alice, Liam, Tom, Emma, Chloe, Stella, Sophia, Luna, Addison, Nora, Ella, Harper, Ava, Bob, Hannah, Victoria, Zoey, Elizabeth, Sofia, Charlotte, Natalie, Jane, Olivia, Aria, 
=====================================================
3. If the section below is empty, then there are no clang-tidy warnings 
   (ignore warnings from system headers, such as "13554 warnings generated.")
=====================================================
32190 warnings generated.
78154 warnings generated.
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.cpp:2:1: error: system include stdexcept not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <stdexcept>
^~~~~~~~~~~~~~~~~~~~
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.cpp:4:23: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool PatientPriority::operator()(const Patient& a, const Patient& b) const {
                      ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.cpp:4:49: error: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
bool PatientPriority::operator()(const Patient& a, const Patient& b) const {
                                                ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.cpp:4:67: error: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
bool PatientPriority::operator()(const Patient& a, const Patient& b) const {
                                                                  ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.cpp:11:26: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void COVIDPriorityQueue::push(const Patient& patient) {
                         ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.cpp:12:24: error: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers,-warnings-as-errors]
    if (patient.age >= 5) {
                       ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.cpp:17:26: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
bool COVIDPriorityQueue::empty() const {
                         ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.cpp:21:26: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
void COVIDPriorityQueue::pop() {
                         ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.cpp:27:29: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
Patient COVIDPriorityQueue::top() const {
                            ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.h:5:1: error: system include queue not allowed, transitively included from /home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <queue>
^~~~~~~~~~~~~~~~
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.h:6:1: error: system include vector not allowed, transitively included from /home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <vector>
^~~~~~~~~~~~~~~~~
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.h:8:8: error: accessing fields in struct 'PatientPriority' is inefficient due to poor alignment; currently aligned to 1 bytes, but recommended alignment is 0 bytes [altera-struct-pack-align,-warnings-as-errors]
struct PatientPriority {
       ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.h:8:8: note: use "__attribute__((aligned(0)))" to align struct 'PatientPriority' to 0 bytes
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.h:9:36: error: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
    bool operator()(const Patient& a, const Patient& b) const;
                                   ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.h:9:54: error: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
    bool operator()(const Patient& a, const Patient& b) const;
                                                     ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:2:1: error: system include fstream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <fstream>
^~~~~~~~~~~~~~~~~~
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:3:1: error: system include iostream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <iostream>
^~~~~~~~~~~~~~~~~~~
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:4:1: error: system include sstream not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <sstream>
^~~~~~~~~~~~~~~~~~
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:5:1: error: system include string not allowed [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:7:5: error: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace,-warnings-as-errors]
int main() {
    ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:9:5: note: inferred assignment of ID-dependent value from ID-dependent  [altera-id-dependent-backward-branch]
    std::ifstream file("patients.txt");
    ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:8:24: error: invalid case style for variable 'queue' [readability-identifier-naming,-warnings-as-errors]
    COVIDPriorityQueue queue;
                       ^~~~~
                       Queue
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:9:19: error: invalid case style for variable 'file' [readability-identifier-naming,-warnings-as-errors]
    std::ifstream file("patients.txt");
                  ^~~~
                  File
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:10:17: error: invalid case style for variable 'line' [readability-identifier-naming,-warnings-as-errors]
    std::string line;
                ^~~~
                Line
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:12:12: error: backward branch (while loop) is ID-dependent due to variable reference to 'file' and may cause performance degradation [altera-id-dependent-backward-branch,-warnings-as-errors]
    while (std::getline(file, line)) {
           ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:12:12: error: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/basic_string.h:3922:5: note: resolves to this declaration
    getline(basic_istream<_CharT, _Traits>& __is,
    ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:13:28: error: invalid case style for variable 'iss' [readability-identifier-naming,-warnings-as-errors]
        std::istringstream iss(line);
                           ^~~
                           Iss
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:14:9: error: multiple declarations in a single statement reduces readability [readability-isolate-declaration,-warnings-as-errors]
        std::string name, precondition;
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:13:9: note: inferred assignment of ID-dependent value from ID-dependent  [altera-id-dependent-backward-branch]
        std::istringstream iss(line);
        ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:14:21: error: invalid case style for variable 'name' [readability-identifier-naming,-warnings-as-errors]
        std::string name, precondition;
                    ^
note: this fix will not be applied because it overlaps with another fix
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:14:27: error: invalid case style for variable 'precondition' [readability-identifier-naming,-warnings-as-errors]
        std::string name, precondition;
                          ^
note: this fix will not be applied because it overlaps with another fix
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:15:13: error: variable 'age' is not initialized [cppcoreguidelines-init-variables,-warnings-as-errors]
        int age;
            ^
                = 0
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:15:13: error: invalid case style for variable 'age' [readability-identifier-naming,-warnings-as-errors]
        int age;
            ^~~
            Age
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:17:21: error: invalid case style for variable 'temp' [readability-identifier-naming,-warnings-as-errors]
        std::string temp;
                    ^
note: this fix will not be applied because it overlaps with another fix
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:18:9: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
        while (iss >> temp) {
        ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:18:16: error: backward branch (while loop) is ID-dependent due to variable reference to 'iss' and may cause performance degradation [altera-id-dependent-backward-branch,-warnings-as-errors]
        while (iss >> temp) {
               ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:18:20: error: 'operator>><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        while (iss >> temp) {
                   ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/basic_string.h:3869:5: note: resolves to this declaration
    operator>>(basic_istream<char>& __is, basic_string<char>& __str);
    ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:20:22: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                name = temp;
                     ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/basic_string.h:802:7: note: resolves to this declaration
      operator=(const basic_string& __str)
      ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:22:36: error: invalid case style for variable 'validator' [readability-identifier-naming,-warnings-as-errors]
                std::istringstream validator(temp);
                                   ^~~~~~~~~
                                   Validator
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:23:31: error: 'operator>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                if (validator >> age) {
                              ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/istream:179:7: note: resolves to this declaration
      operator>>(int& __n);
      ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:25:19: error: do not use 'else' after 'break' [llvm-else-after-return,readability-else-after-return,-warnings-as-errors]
                } else {
                  ^~~~~~
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:26:26: error: 'operator+=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                    name += " " + temp;
                         ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/basic_string.h:1328:7: note: resolves to this declaration
      operator+=(const basic_string& __str)
      ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:26:33: error: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
                    name += " " + temp;
                                ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/basic_string.tcc:606:5: note: resolves to this declaration
    operator+(const _CharT* __lhs,
    ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:30:13: error: 'operator>><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        iss >> precondition;
            ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/basic_string.h:3869:5: note: resolves to this declaration
    operator>>(basic_istream<char>& __is, basic_string<char>& __str);
    ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:31:52: error: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        queue.push(Patient(name, age, precondition == "Yes"));
                                                   ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/basic_string.h:3598:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:34:9: error: variable 'availableVaccines' is not initialized [cppcoreguidelines-init-variables,-warnings-as-errors]
    int availableVaccines;
        ^
                          = 0
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:34:9: error: invalid case style for variable 'availableVaccines' [readability-identifier-naming,-warnings-as-errors]
    int availableVaccines;
        ^~~~~~~~~~~~~~~~~
        AvailableVaccines
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:35:15: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    std::cout << "How many vaccines are available? ";
              ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/ostream:615:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:36:14: error: 'operator>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    std::cin >> availableVaccines;
             ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/istream:179:7: note: resolves to this declaration
      operator>>(int& __n);
      ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:38:5: error: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops,-warnings-as-errors]
    while (!queue.empty() && availableVaccines > 0) {
    ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:39:17: error: invalid case style for variable 'patient' [readability-identifier-naming,-warnings-as-errors]
        Patient patient = queue.top();
                ^~~~~~~
                Patient
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:40:19: error: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        std::cout << patient.name << " ";
                  ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/basic_string.h:3882:5: note: resolves to this declaration
    operator<<(basic_ostream<_CharT, _Traits>& __os,
    ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:40:35: error: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        std::cout << patient.name << " ";
                                  ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/ostream:615:5: note: resolves to this declaration
    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
    ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:44:15: error: 'operator<<' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    std::cout << std::endl;
              ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/ostream:108:7: note: resolves to this declaration
      operator<<(__ostream_type& (*__pf)(__ostream_type&))
      ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/main.cpp:44:18: error: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    std::cout << std::endl;
                 ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/ostream:688:5: note: resolves to this declaration
    endl(basic_ostream<_CharT, _Traits>& __os)
    ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:4:1: error: system include string not allowed, transitively included from /home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h [llvmlibc-restrict-system-libc-headers,-warnings-as-errors]
#include <string>
^~~~~~~~~~~~~~~~~
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:6:8: error: accessing fields in struct 'Patient' is inefficient due to padding; only needs 37 bytes but is using 40 bytes [altera-struct-pack-align,-warnings-as-errors]
struct Patient {
       ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:6:8: note: use "__attribute__((packed))" to reduce the amount of padding applied to struct 'Patient'
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:6:8: error: accessing fields in struct 'Patient' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 64 bytes [altera-struct-pack-align,-warnings-as-errors]
struct Patient {
       ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:6:8: note: use "__attribute__((aligned(64)))" to align struct 'Patient' to 64 bytes
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:7:17: error: member variable 'name' has public visibility [misc-non-private-member-variables-in-classes,-warnings-as-errors]
    std::string name;
                ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:7:17: error: invalid case style for public member 'name' [readability-identifier-naming,-warnings-as-errors]
    std::string name;
                ^~~~
                Name
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:8:9: error: member variable 'age' has public visibility [misc-non-private-member-variables-in-classes,-warnings-as-errors]
    int age;
        ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:8:9: error: invalid case style for public member 'age' [readability-identifier-naming,-warnings-as-errors]
    int age;
        ^~~
        Age
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:9:10: error: member variable 'hasPrecondition' has public visibility [misc-non-private-member-variables-in-classes,-warnings-as-errors]
    bool hasPrecondition;
         ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:9:10: error: invalid case style for public member 'hasPrecondition' [readability-identifier-naming,-warnings-as-errors]
    bool hasPrecondition;
         ^~~~~~~~~~~~~~~
         HasPrecondition
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:11:66: error: 'move<std::basic_string<char> &>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
    Patient(std::string name, int age, bool precondition) : name(std::move(name)), age(age),
                                                                 ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/move.h:104:5: note: resolves to this declaration
    move(_Tp&& __t) noexcept
    ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/predefined_ops.h:158:23: error: 'operator()' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        { return bool(_M_comp(*__it1, *__it2)); }
                      ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.cpp:4:23: note: resolves to this declaration
bool PatientPriority::operator()(const Patient& a, const Patient& b) const {
                      ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/predefined_ops.h:196:16: error: 'operator()' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
        { return bool(_M_comp(*__it, __val)); }
                      ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/COVIDPriorityQueue.cpp:4:23: note: resolves to this declaration
bool PatientPriority::operator()(const Patient& a, const Patient& b) const {
                      ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/stl_heap.h:141:29: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __parent));
                                   ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:6:8: note: resolves to this declaration
struct Patient {
       ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/stl_heap.h:145:32: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      *(__first + __holeIndex) = _GLIBCXX_MOVE(__value);
                               ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:6:8: note: resolves to this declaration
struct Patient {
       ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/stl_heap.h:234:29: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
                                   ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:6:8: note: resolves to this declaration
struct Patient {
       ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/stl_heap.h:240:29: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
          *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
                                   ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:6:8: note: resolves to this declaration
struct Patient {
       ^
/opt/rh/gcc-toolset-12/root/usr/lib/gcc/aarch64-redhat-linux/12/../../../../include/c++/12/bits/stl_heap.h:262:17: error: 'operator=' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace,-warnings-as-errors]
      *__result = _GLIBCXX_MOVE(*__first);
                ^
/home/cssuwbstudent/majidi2/CSS343-Priority-Queue/patient.h:6:8: note: resolves to this declaration
struct Patient {
       ^
Suppressed 78068 warnings (78068 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
69 warnings treated as errors
=====================================================
4. If the section below is empty, clang-format does not find any formatting issues
   You can fix formatting errors using "clang-format -i <filename>" on command line
=====================================================
Running clang-format on ./COVIDPriorityQueue.cpp
4,8c4,8
< bool PatientPriority::operator()(const Patient& a, const Patient& b) const {
<     if (a.hasPrecondition == b.hasPrecondition) {
<         return a.age < b.age; // Older patients get higher priority
<     }
<     return !a.hasPrecondition; // Patients with preconditions get highest priority
---
> bool PatientPriority::operator()(const Patient &a, const Patient &b) const {
>   if (a.hasPrecondition == b.hasPrecondition) {
>     return a.age < b.age; // Older patients get higher priority
>   }
>   return !a.hasPrecondition; // Patients with preconditions get highest priority
11,14c11,14
< void COVIDPriorityQueue::push(const Patient& patient) {
<     if (patient.age >= 5) {
<         queue.push(patient);
<     }
---
> void COVIDPriorityQueue::push(const Patient &patient) {
>   if (patient.age >= 5) {
>     queue.push(patient);
>   }
17,19c17
< bool COVIDPriorityQueue::empty() const {
<     return queue.empty();
< }
---
> bool COVIDPriorityQueue::empty() const { return queue.empty(); }
22,24c20,22
<     if (!empty()) {
<         queue.pop();
<     }
---
>   if (!empty()) {
>     queue.pop();
>   }
28,31c26,30
<     if (!empty()) {
<         return queue.top();
<     }
<     throw std::runtime_error("Attempted to access the top of an empty priority queue");
---
>   if (!empty()) {
>     return queue.top();
>   }
>   throw std::runtime_error(
>       "Attempted to access the top of an empty priority queue");
Running clang-format on ./main.cpp
8,10c8,10
<     COVIDPriorityQueue queue;
<     std::ifstream file("patients.txt");
<     std::string line;
---
>   COVIDPriorityQueue queue;
>   std::ifstream file("patients.txt");
>   std::string line;
12,15c12,15
<     while (std::getline(file, line)) {
<         std::istringstream iss(line);
<         std::string name, precondition;
<         int age;
---
>   while (std::getline(file, line)) {
>     std::istringstream iss(line);
>     std::string name, precondition;
>     int age;
17,28c17,26
<         std::string temp;
<         while (iss >> temp) {
<             if (name.empty()) {
<                 name = temp;
<             } else {
<                 std::istringstream validator(temp);
<                 if (validator >> age) {
<                     break;
<                 } else {
<                     name += " " + temp;
<                 }
<             }
---
>     std::string temp;
>     while (iss >> temp) {
>       if (name.empty()) {
>         name = temp;
>       } else {
>         std::istringstream validator(temp);
>         if (validator >> age) {
>           break;
>         } else {
>           name += " " + temp;
30,31c28
<         iss >> precondition;
<         queue.push(Patient(name, age, precondition == "Yes"));
---
>       }
32a30,32
>     iss >> precondition;
>     queue.push(Patient(name, age, precondition == "Yes"));
>   }
34,36c34,36
<     int availableVaccines;
<     std::cout << "How many vaccines are available? ";
<     std::cin >> availableVaccines;
---
>   int availableVaccines;
>   std::cout << "How many vaccines are available? ";
>   std::cin >> availableVaccines;
38,45c38,45
<     while (!queue.empty() && availableVaccines > 0) {
<         Patient patient = queue.top();
<         std::cout << patient.name << " ";
<         queue.pop();
<         --availableVaccines;
<     }
<     std::cout << std::endl;
<     return 0;
---
>   while (!queue.empty() && availableVaccines > 0) {
>     Patient patient = queue.top();
>     std::cout << patient.name << " ";
>     queue.pop();
>     --availableVaccines;
>   }
>   std::cout << std::endl;
>   return 0;
=====================================================
5. If there are any memory leaks, it should be in the output below
=====================================================
